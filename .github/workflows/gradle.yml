# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI

on: # 워크플로우를 수행할 이벤트
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs: # 수행할 워크플로우
  build:
    
    runs-on: ubuntu-18.04. # 실행 환경 지정

    steps:
    # 워크플로우 실행 전 기본적으로 체크아웃 필요
    - uses: actions/checkout@v3
    
    # JDk 8 버전 설치
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        
    # gradlew 권한 부여
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      
    # Gradle 사용 (argument 뒤에 그대로 실행)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build
    
    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./freelec-springboot2-webservice.zip ./deploy

    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private ./freelec-springboot2-webservice.zip s3://freelec-s3-bucket/
    # Deploy
    - name: Deploy
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name codedeploy-app \
        --deployment-group-name codedeploy-deployment-group \
        --file-exists-behavior OVERWR   ITE \
        --s3-location bucket=freelec-s3-bucket,bundleType=zip,key=freelec-springboot2-webservice.zip \
        --region ap-northeast-2


